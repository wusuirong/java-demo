<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<description>Spring-web MVC admin 配置</description>


	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/common/**" location="/common/" />
	<mvc:resources mapping="/html/**" location="/html/" />

	<context:annotation-config />
	<!-- 把标记了@Controller注解的类转换为bean -->
	<!--context:component-scan base-package="com.xxx.webservice" /-->

	<!-- 当请求应用程序首页时，将执行/请求，还可以设定成redirect、forward <mvc:view-controller path="/" 
		view-name="redirect:/login.html" /> -->
		
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->  
    <mvc:resources mapping="/common/**" location="/common/"/> 
    <mvc:resources mapping="/html/**" location="/html/"/>
	
	<!-- 排除对所有services进行扫描 -->
	<context:component-scan base-package="com.xxx.*" />
	
	<context:property-placeholder location="classpath*:app*.properties" ignore-unresolvable="true"/>
	
	<!-- 当请求应用程序首页时，将执行/请求，还可以设定成redirect、forward 
	<mvc:view-controller path="/" view-name="redirect:/login.html" />
-->
	<!-- 这两个类用来启动基于Spring MVC的注解功能，将控制器与方法映射加入到容器中 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<!-- 配置一下对json数据的转换 -->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
			</list>
		</property>
		 <!-- 日期格式转换 
        <property name="webBindingInitializer">  
            <bean class="net.mikoo.eacms.base.converter.DateConverter" />  
        </property> 
        -->   
	</bean>

	
</beans>